version: '3.9'

services:
  backend:
    container_name: backend
    build: ./backend
    ports:
      - "8000:8000"
      - "9000:9000"
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - internal-network
    environment:
      CELERY_BROKER_URL: ${REDIS_URL}
      CELERY_RESULT_BACKEND: ${REDIS_URL}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      DATABASE_URL: ${DATABASE_URL}
      TASK_RUNNER_DATABASE_URL: ${TASK_RUNNER_DATABASE_URL}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES}
      ALGORITHM: ${ALGORITHM}
      SECRET_KEY: ${SECRET_KEY}
    restart: unless-stopped
    volumes:
      - ./backend:/app

  email:
    container_name: email
    build: ./email-backend
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - internal-network
    environment:
      REDIS_BROKER_URL: ${REDIS_BROKER_URL}
    depends_on:
      - celery
    restart: unless-stopped
    volumes:
      - ./email-backend:/app

  celery:
    container_name: celery
    build: ./celery-backend
    networks:
      - internal-network
    environment:
      CELERY_BROKER_URL: ${REDIS_URL}
      CELERY_RESULT_BACKEND: ${REDIS_URL}
      MAILTRAP_BEARER_TOKEN: ${MAILTRAP_BEARER_TOKEN}
      MAILTRAP_API_KEY: ${MAILTRAP_API_KEY}
    depends_on:
      - redis
    command: celery -A worker worker -B --loglevel=info
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "celery inspect ping" ]
    volumes:
      - ./celery-backend:/app

  db:
    container_name: db
    networks:
      - internal-network
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    healthcheck:
      interval: 5s
      retries: 10
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
    image: postgres:14.1-alpine
    ports:
      - '5432:5432'
    restart: unless-stopped
    volumes:
      - ./postgres:/var/lib/postgresql/data
      - ./db:/docker-entrypoint-initdb.d/

  redis:
    container_name: redis
    networks:
      - internal-network
    image: redis:7.0.7-alpine
    ports:
      - "6379"
    command: redis-server --loglevel verbose
    restart: unless-stopped

networks:
  internal-network:
    name: internal-network
    driver: bridge

